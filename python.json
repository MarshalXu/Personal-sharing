{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"py_head": {
		"prefix": "pyhead",
		"body": [
			"# -*- coding: utf-8 -*-",
			"'''",
			"# Created on 09-17-22 17:39",
			"# @Filename: $TM_FILENAME",
			"# @Desp: ",
			"# @software: vscode",
			"# @author: xuchang0514@sina.com",
			"'''",
			"#lib moduls:",
			"import os,sys",
			"sys.path.append(os.path.dirname(os.path.abspath(__file__)))",
			"from loguru import logger",
			"logger.configure(handlers=[{\"sink\": sys.stderr, \"level\": \"DEBUG\"}])",
			"",
			"if __name__ == \"__main__\":",
			"\tpass"
		],
		"description": "write a py file head"
	},
	"simple_flask":{
		"prefix": "pyflask",
		"body": [
			"# -*- coding: utf-8 -*-",
			"'''",
			"# Created on 09-17-22 17:39",
			"# @Filename: $TM_FILENAME",
			"# @Desp: ",
			"# @software: vscode",
			"# @author: xuchang0514@sina.com",
			"'''",
			"#lib moduls:",
			"import os,sys",
			"sys.path.append(os.path.dirname(os.path.abspath(__file__)))",
			"from loguru import logger",
			"logger.configure(handlers=[{\"sink\": sys.stderr, \"level\": \"DEBUG\"}])",
			"import json",
			"from flask import Flask, request",
			"app = Flask(__name__)",
			"",
			"@app.route('/', methods=['GET','POST'])",
			"def hellp():",
			"",
			"\tif request.method == 'POST':",
			"\t\tdata_get = json.loads(request.get_data(as_text=True))",
			"\t\t# todo",
			"\t\treturn 200",
			"",
			"if __name__ == \"__main__\":",
			"\tapp.config[\"JSON_AS_ASCII\"] = False",
			"\tapp.config[\"DEBUG\"] = True",
			"\tapp.run(\"0.0.0.0\",5050)"
		],
		"description": "write a flask framework"
	}
}